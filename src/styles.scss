/* You can add global styles to this file, and also import other style files */
@import 'ngx-toastr/toastr';

@import './flex_comp.scss';

// Define a custom mixin that takes in the current theme
@mixin theme-color-grabber($theme, $alterPrimary, $textColor) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
    
  }
  .primaryColorFont {
    color: mat-color($primary);
  }
  .accentColorFont {
    color: mat-color($accent);
  }
  .warnColorFont{
    color: mat-color($warn);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }


  .leftNavColor{
    background-color: mat-color($accent) !important;
    color : $textColor !important;
  }
  
  .alterPrimaryBG {
    background-color: $alterPrimary !important ;
    color : $textColor !important;

  }

  .textColorPrimary{
    color : $textColor;
  }

  .demo-header-container{
    background: mat-color($primary);
    background: -moz-linear-gradient(90deg,$alterPrimary 0%, mat-color($accent) 100%);
    background: -webkit-linear-gradient(90deg, $alterPrimary 0%, mat-color($accent) 100%);
    background: linear-gradient(90deg, $alterPrimary 0%, mat-color($accent) 100%);
    color: #000000;
  
  }
}

html,
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  overflow-x: hidden !important;
  height: 100%;
}

.grid-row{
    min-height: fit-content;
    
}


mat-dialog-container{
  max-width: 50%;
  margin: auto;
}
@media (max-width: 500px){
  mat-dialog-container{
    max-width: 80vw;
  }
}



.img-fluid {
  max-width: 100%;
  height: auto; 
}

.primary {
  //#d5c5c8
  //#9da3a4
  //#604d53
  //#db7f8e
  //#ffdbda
}

mat-card {
  word-break: break-all !important;

}

.img-size {
  object-fit: contain ;
  width: 100%;
  height: 150px;
}

@keyframes spinner {
  to {transform: rotate(360deg);}
}

 
.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid #ffffff;
  border-top-color: #000000;
  animation: spinner .8s linear infinite;
}

.disabled {
  color: grey !important;
}

mat-card-header{
  background-color: rgb(1, 1, 1,0.1);
  justify-content: center;
  align-items: center;
}

mat-card-title{
 padding: 10px;

}

/*
 *  STYLE 1
 */

 .cScrollbar::-webkit-scrollbar-track
 {
   
   border-radius: 10px;
   background-color: #F5F5F5;
 }
 
 .cScrollbar::-webkit-scrollbar
 {
   width: 12px;
   background-color: #F5F5F5;
 }
 
 .cScrollbar::-webkit-scrollbar-thumb
 {
   border-radius: 10px;
   
   background-color: #c7c7c7;
 }
 

 /* Tooltip container */
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
 
  /* Position the tooltip text - see examples below! */
  position: absolute;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}